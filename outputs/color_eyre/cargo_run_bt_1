    Finished dev [unoptimized + debuginfo] target(s) in 0.13s
     Running `target/debug/panic_test`
thread 'main' panicked at 'assertion failed: (self.addr as usize) < (isize::MAX as usize)', /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/macros.rs:13:23
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1069
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: std::panicking::begin_panic
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panicking.rs:404
  12: <findshlibs::linux::SharedLibrary as findshlibs::SharedLibrary>::virtual_memory_bias
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/macros.rs:13
  13: backtrace::symbolize::gimli::Cache::new::{{closure}}
             at /home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/symbolize/gimli.rs:427
  14: findshlibs::linux::SharedLibrary::callback::{{closure}}
             at /home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/findshlibs-0.5.0/src/linux/mod.rs:185
  15: core::ops::function::FnOnce::call_once
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libcore/ops/function.rs:232
  16: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panic.rs:318
  17: std::panicking::try::do_call
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panicking.rs:297
  18: __rust_try
  19: std::panicking::try
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panicking.rs:274
  20: std::panic::catch_unwind
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panic.rs:394
  21: findshlibs::linux::SharedLibrary::callback
             at /home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/findshlibs-0.5.0/src/linux/mod.rs:181
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
