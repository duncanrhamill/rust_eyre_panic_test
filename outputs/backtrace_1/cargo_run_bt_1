warning: unused variable: `ip`
  --> src/main.rs:36:13
   |
36 |         let ip = frame.ip();
   |             ^^ help: if this is intentional, prefix it with an underscore: `_ip`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `symbol_address`
  --> src/main.rs:37:13
   |
37 |         let symbol_address = frame.symbol_address();
   |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_symbol_address`

warning: 2 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.06s
     Running `target/debug/panic_test`
Name: backtrace::backtrace::libunwind::trace::h4870d0ae410a1cc5
Filename: "/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs"
Name: backtrace::backtrace::trace_unsynchronized::h1f34a428c303ff23
Filename: "/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs"
Name: backtrace::backtrace::trace::h63f9eead342efac0
Filename: "/home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs"
Name: panic_test::main::h7e60a44d390e3bfc
Filename: "src/main.rs"
Name: std::rt::lang_start::{{closure}}::h90b1015f5b7771be
Filename: "/rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/rt.rs"
Name: std::rt::lang_start_internal::{{closure}}::hd5f964dda5660b12
Filename: "src/libstd/rt.rs"
Name: std::panicking::try::do_call::h4683fcc1c54e6e51
Filename: "src/libstd/panicking.rs"
Name: std::panicking::try::hc0df9ee619425054
Filename: "src/libstd/panicking.rs"
Name: std::panic::catch_unwind::heaea33a94c7dc666
Filename: "src/libstd/panic.rs"
Name: std::rt::lang_start_internal::h8673ad1854342d74
Filename: "src/libstd/rt.rs"
Name: std::rt::lang_start::h0cf7958c6aa6a65b
Filename: "/rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/rt.rs"
Name: main
Name: __libc_start_main
Filename: "/build/glibc-FUvrFr/glibc-2.28/csu/libc-start.c"
thread 'main' panicked at 'panic', src/main.rs:52:5
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1069
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: std::panicking::begin_panic
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/panicking.rs:404
  12: panic_test::main
             at src/main.rs:52
  13: std::rt::lang_start::{{closure}}
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/rt.rs:67
  14: std::rt::lang_start_internal::{{closure}}
             at src/libstd/rt.rs:52
  15: std::panicking::try::do_call
             at src/libstd/panicking.rs:297
  16: std::panicking::try
             at src/libstd/panicking.rs:274
  17: std::panic::catch_unwind
             at src/libstd/panic.rs:394
  18: std::rt::lang_start_internal
             at src/libstd/rt.rs:51
  19: std::rt::lang_start
             at /rustc/9912925c254589f58338cb2993163e618475ff75/src/libstd/rt.rs:67
  20: main
  21: __libc_start_main
             at /build/glibc-FUvrFr/glibc-2.28/csu/libc-start.c:308
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
